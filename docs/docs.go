// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/charges": {
            "get": {
                "description": "Get all charges",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charges"
                ],
                "summary": "Get all charges",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit offset",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create charges",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charges"
                ],
                "summary": "Create charges",
                "parameters": [
                    {
                        "description": "Charges",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Charges"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/charges/:id": {
            "delete": {
                "description": "Delete charges",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charges"
                ],
                "summary": "Delete charges",
                "parameters": [
                    {
                        "type": "string",
                        "description": "change Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update charges",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charges"
                ],
                "summary": "Update charges",
                "parameters": [
                    {
                        "type": "string",
                        "description": "charge Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/charges/charge/:id": {
            "get": {
                "description": "Get charge By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charges"
                ],
                "summary": "Get charge By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "charge Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/charges/order/:orderId": {
            "get": {
                "description": "Get all charges by OrderId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charges"
                ],
                "summary": "Get all charges by OrderId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order orderId",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/charges/report": {
            "get": {
                "description": "Create all chargers report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charges"
                ],
                "summary": "Create all chargers report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "text search by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/charges/search": {
            "get": {
                "description": "Get all charges by search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charges"
                ],
                "summary": "Get all charges by search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "text search by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/company": {
            "get": {
                "description": "Get All companies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Get all companies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Create company",
                "parameters": [
                    {
                        "description": "Company",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/company/:id": {
            "get": {
                "description": "Get company By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Get company By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Company by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Delete Company by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Company by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Update Company by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/company/search": {
            "get": {
                "description": "Get all companies by search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Get all companies by search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "text search by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/customer": {
            "get": {
                "description": "Update Customer Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Update Customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset ",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/customer/": {
            "post": {
                "description": "Create Customer Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Create Customer",
                "parameters": [
                    {
                        "description": "Customer",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/customer/:customerId": {
            "delete": {
                "description": "Delete Customer Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Delete Customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/customer/:id": {
            "get": {
                "description": "Get Customer By Id saved in PostgreSQL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "truck"
                ],
                "summary": "Get Customer By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/customers/:customerId": {
            "put": {
                "description": "Update Customer Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Update Customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CustomerUpdateInput",
                        "name": "truck",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CustomerUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/customers/search": {
            "get": {
                "description": "Get all Customers by search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Get all Customers by search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "text search by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/driver": {
            "get": {
                "description": "Get data about all Drivers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "driver"
                ],
                "summary": "Get all Drivers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/driver/": {
            "post": {
                "description": "Send Driver data to create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "driver"
                ],
                "summary": "Create Driver",
                "parameters": [
                    {
                        "description": "Driver",
                        "name": "driver",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Driver"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/driver/:id": {
            "delete": {
                "description": "Send Driver data to create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "driver"
                ],
                "summary": "Create Driver",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Driver id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Driver data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "driver"
                ],
                "summary": "Update Driver",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Driver id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Driver Update Input",
                        "name": "driver",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DriverUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/drivers/:companyId": {
            "get": {
                "description": "Get data about all Drivers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "driver"
                ],
                "summary": "Get all Drivers by company id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/drivers/driver/:id": {
            "get": {
                "description": "Get all Driver data by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "driver"
                ],
                "summary": "Get Driver by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Driver id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/drivers/search": {
            "get": {
                "description": "Get all Drivers by search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "driver"
                ],
                "summary": "Get all Drivers by search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "text search by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/group": {
            "get": {
                "description": "Get all Groups data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Get all Groups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Send Group data to create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Create Group",
                "parameters": [
                    {
                        "description": "Groups",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Groups"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/group/:companyId": {
            "get": {
                "description": "Get all Groups data by company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Get all Groups by company",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Company id",
                        "name": "companyId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/group/:groupId": {
            "post": {
                "description": "Sent Group data to upgrade it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Update Group",
                "parameters": [
                    {
                        "description": "GroupUpdateInput",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GroupUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Sent Group id to delete it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Delete Group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group id",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/group/search": {
            "get": {
                "description": "Get all Groups by search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Get all Groups by search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "text search by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/groups/group/:id": {
            "get": {
                "description": "Get Group data by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Get Group by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group id",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/invoicing": {
            "get": {
                "description": "Get all invoices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoice"
                ],
                "summary": "Get all invoices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/invoicing/:id": {
            "get": {
                "description": "Get invoice by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoice"
                ],
                "summary": "Get invoice by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "invoice Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete invoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoice"
                ],
                "summary": "delete invoice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "invoice Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "update invoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoice"
                ],
                "summary": "update invoice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "invoice Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/invoicing/report": {
            "get": {
                "description": "Create all invoices report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoice"
                ],
                "summary": "Create all invoices report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/invoicing/report/pdf/:id": {
            "get": {
                "description": "Get invoice in PDF if order is completed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoice"
                ],
                "summary": "Get invoice in PDF",
                "parameters": [
                    {
                        "type": "string",
                        "description": "settlement id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/invoicing/search": {
            "get": {
                "description": "Search and filter invoices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoice"
                ],
                "summary": "Search and filter invoices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "text search by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "description": "Get all notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Get all notifications",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/notifications/:id": {
            "get": {
                "description": "Get Notification By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Get Notification By Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notifications id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/notifications/:userId": {
            "get": {
                "description": "Get All Notifications By UserId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Get All Notifications By UserId",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notifications id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/order": {
            "post": {
                "description": "Send Order data to create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Create order",
                "parameters": [
                    {
                        "description": "Order",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "description": "Get All Orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get all Orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset ",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/orders/:companyId": {
            "get": {
                "description": "Get all orders data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get all Orders by Company id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit offset",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Order",
                        "name": "Order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/orders/:id": {
            "delete": {
                "description": "Delete Order by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "safety"
                ],
                "summary": "Delete Order by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Safety Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Order by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "safety"
                ],
                "summary": "Update Order by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/orders/completed/:id": {
            "post": {
                "description": "Mark order completed by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "safety"
                ],
                "summary": "Mark order completed by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/orders/invoiced/:id": {
            "post": {
                "description": "Make order invoiced by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "safety"
                ],
                "summary": "Make order invoiced by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/orders/order/:id": {
            "get": {
                "description": "Get Order By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get Order By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/orders/order/driver/:driverId": {
            "get": {
                "description": "Get Order By driver Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get Order By driver Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order driverId",
                        "name": "driverId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/orders/order/trailer/:trailerId": {
            "get": {
                "description": "Get Order By trailer Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get Order By trailer Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order trailerId",
                        "name": "trailerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/orders/order/truck/:truckId": {
            "get": {
                "description": "Get Order By truck Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get Order By truck Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order truckId",
                        "name": "truckId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/orders/report": {
            "get": {
                "description": "Create all orders report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Create all orders report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "object search by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset ",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/orders/search": {
            "get": {
                "description": "Get all Orders by search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get all Orders by search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "object search by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset ",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/safeties/:id": {
            "get": {
                "description": "Get Safety By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "safety"
                ],
                "summary": "Get Safety By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Safety Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "companyId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/safety": {
            "get": {
                "description": "Get All Safeties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "safety"
                ],
                "summary": "Get all Safeties",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset ",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Send Safety data to create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "safety"
                ],
                "summary": "Create Safety",
                "parameters": [
                    {
                        "description": "Safety",
                        "name": "safety",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Safety"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/safety/:companyId": {
            "get": {
                "description": "Get All Safeties by company id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "safety"
                ],
                "summary": "Get all Safeties by company id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company Id",
                        "name": "companyId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset ",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/safety/:id": {
            "get": {
                "description": "Get All Safeties by company id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "safety"
                ],
                "summary": "Get all Safeties by company id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Safety Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "companyId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Safety Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "safety"
                ],
                "summary": "Update Safety",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Safety Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "companyId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/safety/search": {
            "get": {
                "description": "Get all Safeties by search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "safety"
                ],
                "summary": "Get all Safeties by search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "object search by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset ",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/settlement": {
            "get": {
                "description": "Get all Settlements data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settlement"
                ],
                "summary": "Get all Settlements",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Settlement",
                        "name": "settlement",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Settlement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/settlement/:id": {
            "get": {
                "description": "Bet Settlement data by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settlement"
                ],
                "summary": "Get Settlement by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset ",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Settlement id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Sent Settlement data to create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settlement"
                ],
                "summary": "Update Settlement",
                "parameters": [
                    {
                        "description": "SettlementUpdateInput",
                        "name": "settlement",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SettlementUpdateInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Settlement id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Settlement by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settlement"
                ],
                "summary": "Delete Settlement",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Settlement id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/settlement/:orderId": {
            "post": {
                "description": "Create settlement based on orderId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settlement"
                ],
                "summary": "Create Settlement",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order orderId",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/settlement/:settlementId": {
            "get": {
                "description": "Get all charges by settlement Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charges"
                ],
                "summary": "Get all charges by settlement Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "settlement settlementId",
                        "name": "settlementId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/settlement/report/pdf/:id": {
            "get": {
                "description": "Search and filter invoices if order is completed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settlement"
                ],
                "summary": "Search and filter invoices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "settlement id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/settlement/search": {
            "get": {
                "description": "Get all Settlements by search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settlement"
                ],
                "summary": "Get all Settlements by search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "object search by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset ",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/trailer/": {
            "get": {
                "description": "Update Trailer Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trailer"
                ],
                "summary": "Update Trailer",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Send Trailer data to create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trailers"
                ],
                "summary": "Create Trailer",
                "parameters": [
                    {
                        "description": "Trailer",
                        "name": "trailer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Trailer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/trailer/:trailerId": {
            "put": {
                "description": "Update Trailer Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trailer"
                ],
                "summary": "Update Trailer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trailer Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TrailerUpdateInput",
                        "name": "truck",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TrailerInputUpdate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Update Trailer Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trailer"
                ],
                "summary": "Update Trailer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trailer Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/trailer/company/:companyId": {
            "get": {
                "description": "Get Trailer By Id saved in PostgreSQL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trailer"
                ],
                "summary": "Get Trailer By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company Id",
                        "name": "companyId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset ",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/trailer/search": {
            "get": {
                "description": "Get all Trailers by search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trailer"
                ],
                "summary": "Get all Trailers by search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "object search by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset ",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/trailers/comment/:id": {
            "get": {
                "description": "Get trailer comments by trailer iD",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trailer_comment"
                ],
                "summary": "Get trailer comments by trailer iD",
                "parameters": [
                    {
                        "type": "string",
                        "description": "trailer id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/trailers/comment/:trailerId": {
            "post": {
                "description": "Create company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trailer_comment"
                ],
                "summary": "Create company",
                "parameters": [
                    {
                        "description": "TrailerComment",
                        "name": "trailer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TrailerComment"
                        }
                    },
                    {
                        "type": "string",
                        "description": "trailer id",
                        "name": "trailerId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/trailers/trailer/:trailerId": {
            "get": {
                "description": "Get Trailer By Id saved in PostgreSQL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trailer"
                ],
                "summary": "Get Trailer By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trailer Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/trucks/": {
            "get": {
                "description": "Get all Trucks data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "truck"
                ],
                "summary": "Get all Trucks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset ",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Company Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Send Truck data to create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trucks"
                ],
                "summary": "Create Truck",
                "parameters": [
                    {
                        "description": "Truck",
                        "name": "truck",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Truck"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/trucks/:companyId": {
            "get": {
                "description": "Get all User data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "truck"
                ],
                "summary": "Get all Truck by Company id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset ",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Truck",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Truck"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/trucks/:truckId": {
            "put": {
                "description": "Update Truck Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "truck"
                ],
                "summary": "Update Truck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Truck Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TruckUpdateInput",
                        "name": "truck",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TruckUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Truck Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "truck"
                ],
                "summary": "Delete Truck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Truck Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/trucks/search": {
            "get": {
                "description": "Get all Trucks by search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "truck"
                ],
                "summary": "Get all Trucks by search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "object search by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset ",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/trucks/truck/:id": {
            "get": {
                "description": "Get Truck data by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "truck"
                ],
                "summary": "Get Truck by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "truck id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Send User data to create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/user/:id": {
            "post": {
                "description": "Send User data to create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "description": "UpdateUserInput",
                        "name": "UpdateUserInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateUserInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete User by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get all User data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get all Users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "User",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/users/:companyId": {
            "get": {
                "description": "Get all User data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get all Users by Company id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "User",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/users/search": {
            "get": {
                "description": "Get all Users by search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get all Users by search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "text search by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset search by offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/users/user/:id": {
            "get": {
                "description": "Get User data by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get User by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Charges": {
            "type": "object",
            "required": [
                "charge_date",
                "driver_id",
                "driver_name",
                "order_id",
                "rate",
                "type_deductions"
            ],
            "properties": {
                "charge_date": {
                    "type": "integer"
                },
                "company_name": {
                    "description": "company driver owner",
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "integer"
                },
                "driver_name": {
                    "type": "string"
                },
                "files": {
                    "description": "files list (with possibility to open)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "order_id": {
                    "type": "integer"
                },
                "rate": {
                    "description": "+100 or -100",
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "type_deductions": {
                    "description": "deductions(-) and earnings(+)",
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Company": {
            "type": "object",
            "required": [
                "legal_name"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "billing_address": {
                    "type": "string"
                },
                "billing_email": {
                    "type": "string"
                },
                "billing_method": {
                    "type": "string"
                },
                "billing_type": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "deletedAt": {
                    "type": "string"
                },
                "fax_number": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "legal_name": {
                    "type": "string"
                },
                "mc_number": {
                    "type": "integer"
                },
                "order_status": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "phone_number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Customer": {
            "type": "object",
            "required": [
                "legal_name"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "billing_address": {
                    "type": "string"
                },
                "billing_balance": {
                    "type": "number"
                },
                "billing_credit_limit": {
                    "type": "number"
                },
                "billing_email": {
                    "type": "string"
                },
                "billing_method": {
                    "type": "string"
                },
                "billing_total_balance": {
                    "type": "number"
                },
                "billing_type": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "deletedAt": {
                    "type": "string"
                },
                "dot_number": {
                    "type": "string"
                },
                "fax_number": {
                    "type": "string"
                },
                "files_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "legal_name": {
                    "type": "string"
                },
                "mc_number": {
                    "type": "integer"
                },
                "phone_number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.CustomerUpdateInput": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "billing_address": {
                    "type": "string"
                },
                "billing_balance": {
                    "type": "number"
                },
                "billing_credit_limit": {
                    "type": "number"
                },
                "billing_email": {
                    "type": "string"
                },
                "billing_method": {
                    "type": "string"
                },
                "billing_total_balance": {
                    "type": "number"
                },
                "billing_type": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "dot_number": {
                    "type": "string"
                },
                "fax_number": {
                    "type": "string"
                },
                "legal_name": {
                    "type": "string"
                },
                "mc_number": {
                    "type": "integer"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "models.Driver": {
            "type": "object",
            "required": [
                "first_name",
                "last_name"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "address": {
                    "type": "string"
                },
                "allow_checks": {
                    "type": "boolean"
                },
                "birth_day": {
                    "type": "integer"
                },
                "cdl_classification": {
                    "type": "string"
                },
                "cdl_date": {
                    "type": "integer"
                },
                "cdl_endorsements": {
                    "type": "string"
                },
                "charges_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "city": {
                    "type": "string"
                },
                "company_id": {
                    "type": "integer"
                },
                "country": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "eligible": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "emergency": {
                    "type": "string"
                },
                "emergency_phone": {
                    "type": "string"
                },
                "files_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "first_name": {
                    "type": "string"
                },
                "fuel_cards": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "gross_pay": {
                    "type": "boolean"
                },
                "hire_date": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "last_drug_test_date": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "license_exp_date": {
                    "type": "integer"
                },
                "license_number": {
                    "type": "integer"
                },
                "medial_card": {
                    "type": "integer"
                },
                "mvr_date": {
                    "type": "integer"
                },
                "order_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "pay_method": {
                    "type": "string"
                },
                "pay_to": {
                    "description": "pay to  company",
                    "type": "string"
                },
                "pay_to_count": {
                    "type": "string"
                },
                "pay_to_owner": {
                    "description": "pay to driver",
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "restrictions": {
                    "type": "string"
                },
                "review_date": {
                    "type": "integer"
                },
                "ssn": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tax_form": {
                    "type": "string"
                },
                "termination_date": {
                    "type": "integer"
                },
                "transponder": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.DriverUpdateInput": {
            "type": "object",
            "required": [
                "first_name",
                "last_name"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "address": {
                    "type": "string"
                },
                "allow_checks": {
                    "type": "boolean"
                },
                "birth_day": {
                    "type": "integer"
                },
                "cdl_classification": {
                    "type": "string"
                },
                "cdl_date": {
                    "type": "integer"
                },
                "cdl_endorsements": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "company_id": {
                    "type": "integer"
                },
                "country": {
                    "type": "string"
                },
                "eligible": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "emergency": {
                    "type": "string"
                },
                "emergency_phone": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "fuel_cards": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "gross_pay": {
                    "type": "boolean"
                },
                "hire_date": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "last_drug_test_date": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "license_exp_date": {
                    "type": "integer"
                },
                "license_number": {
                    "type": "integer"
                },
                "medial_card": {
                    "type": "integer"
                },
                "mvr_date": {
                    "type": "integer"
                },
                "pay_method": {
                    "type": "string"
                },
                "pay_to": {
                    "description": "pay to  company",
                    "type": "string"
                },
                "pay_to_count": {
                    "type": "string"
                },
                "pay_to_owner": {
                    "description": "pay to driver",
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "restrictions": {
                    "type": "string"
                },
                "review_date": {
                    "type": "integer"
                },
                "ssn": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tax_form": {
                    "type": "string"
                },
                "termination_date": {
                    "type": "integer"
                },
                "transponder": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.GroupUpdateInput": {
            "type": "object",
            "required": [
                "name",
                "priveleges"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "priveleges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.Groups": {
            "type": "object",
            "required": [
                "company_id",
                "name",
                "priveleges"
            ],
            "properties": {
                "company_id": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "priveleges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "updated": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Order": {
            "type": "object",
            "required": [
                "billing_method",
                "billing_type",
                "invoicing_company",
                "load_number",
                "rate"
            ],
            "properties": {
                "billing_method": {
                    "type": "string"
                },
                "billing_type": {
                    "type": "string"
                },
                "bol_number": {
                    "type": "string"
                },
                "broker_load_number": {
                    "type": "string"
                },
                "charges_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "commodity": {
                    "type": "string"
                },
                "company_id": {
                    "type": "integer"
                },
                "consignee": {
                    "description": "company receiver",
                    "type": "string"
                },
                "consignee_delivery_date_from": {
                    "type": "integer"
                },
                "consignee_delivery_date_to": {
                    "type": "integer"
                },
                "consignee_delivery_time_from": {
                    "type": "integer"
                },
                "consignee_delivery_time_to": {
                    "type": "integer"
                },
                "consignee_phone": {
                    "type": "string"
                },
                "consignee_to_location": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "delivery_number": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "integer"
                },
                "driver_name": {
                    "type": "string"
                },
                "empty_miles": {
                    "type": "number"
                },
                "equipment_type": {
                    "type": "string"
                },
                "eta_or_free_dat": {
                    "type": "integer"
                },
                "external_notes": {
                    "type": "string"
                },
                "files_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "gross_pay": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "invoice_id": {
                    "type": "integer"
                },
                "invoicing_company": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "load_number": {
                    "type": "string"
                },
                "loaded_miles": {
                    "type": "number"
                },
                "ltl": {
                    "type": "boolean"
                },
                "pallets": {
                    "type": "integer"
                },
                "pickup_number": {
                    "type": "string"
                },
                "pieces": {
                    "type": "string"
                },
                "rate": {
                    "type": "number"
                },
                "seal_number": {
                    "type": "string"
                },
                "shipper": {
                    "description": "company sender",
                    "type": "string"
                },
                "shipper_from_location": {
                    "type": "string"
                },
                "shipper_phone": {
                    "description": "phone company sender",
                    "type": "string"
                },
                "shipper_pick_up_data_from": {
                    "type": "integer"
                },
                "shipper_pick_up_data_to": {
                    "type": "integer"
                },
                "shipper_pick_up_time_from": {
                    "type": "integer"
                },
                "shipper_pick_up_time_to": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "temperature": {
                    "type": "integer"
                },
                "total": {
                    "type": "number"
                },
                "total_days": {
                    "type": "integer"
                },
                "total_miles": {
                    "type": "number"
                },
                "trailer_id": {
                    "type": "integer"
                },
                "truck_id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "models.Safety": {
            "type": "object",
            "required": [
                "safety_type"
            ],
            "properties": {
                "comments": {
                    "type": "string"
                },
                "company_id": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "deletedAt": {
                    "type": "string"
                },
                "files_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "safety_type": {
                    "description": "reports permits registration",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Settlement": {
            "type": "object",
            "required": [
                "driver_id",
                "order_id"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deduction": {
                    "type": "number"
                },
                "deleted": {
                    "type": "boolean"
                },
                "deletedAt": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "integer"
                },
                "driver_name": {
                    "type": "string"
                },
                "empty_miles": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "invoicing_company": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "loaded_miles": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "reimbursement": {
                    "type": "number"
                },
                "settlement_date": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                },
                "total_miles": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.SettlementUpdateInput": {
            "type": "object",
            "required": [
                "driver_id",
                "order_id"
            ],
            "properties": {
                "deduction": {
                    "type": "number"
                },
                "driver_id": {
                    "type": "integer"
                },
                "driver_name": {
                    "type": "string"
                },
                "empty_miles": {
                    "type": "integer"
                },
                "invoicing_company": {
                    "type": "string"
                },
                "loaded_miles": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "reimbursement": {
                    "type": "number"
                },
                "settlement_date": {
                    "type": "integer"
                },
                "total": {
                    "type": "number"
                },
                "total_miles": {
                    "description": "SettlementJoin   []SettlementOrderAndChargesJoin ` + "`" + `gorm:\"foreignKey:ID\"` + "`" + `",
                    "type": "integer"
                }
            }
        },
        "models.Trailer": {
            "type": "object",
            "required": [
                "name",
                "owner_name",
                "plate",
                "state",
                "trailer_type",
                "unit_number",
                "vin_number"
            ],
            "properties": {
                "air_ride": {
                    "type": "boolean"
                },
                "cargo_height": {
                    "type": "integer"
                },
                "cargo_length": {
                    "type": "integer"
                },
                "cargo_width": {
                    "type": "integer"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TrailerComment"
                    }
                },
                "company_id": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "dock_high": {
                    "type": "boolean"
                },
                "door_height": {
                    "type": "integer"
                },
                "door_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "door_weight_capacity": {
                    "type": "integer"
                },
                "door_width": {
                    "type": "integer"
                },
                "driver_id": {
                    "type": "integer"
                },
                "expiration": {
                    "type": "integer"
                },
                "files_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "lift_gate": {
                    "type": "boolean"
                },
                "load_bars": {
                    "type": "boolean"
                },
                "location": {
                    "description": "create crud for location ---",
                    "type": "string"
                },
                "make": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_name": {
                    "description": "pay to  company -\u003e companyOwner",
                    "type": "string"
                },
                "pallet_jacks": {
                    "type": "boolean"
                },
                "plate": {
                    "type": "string"
                },
                "plated_trailer": {
                    "type": "boolean"
                },
                "purchase_date": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "straps": {
                    "type": "boolean"
                },
                "trailer_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "unit_number": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vin_number": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.TrailerComment": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "trailer_id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.TrailerInputUpdate": {
            "type": "object",
            "required": [
                "name",
                "owner_name",
                "plate",
                "state",
                "trailer_type",
                "unit_number",
                "vin_number"
            ],
            "properties": {
                "air_ride": {
                    "type": "boolean"
                },
                "cargo_height": {
                    "type": "integer"
                },
                "cargo_length": {
                    "type": "integer"
                },
                "cargo_width": {
                    "type": "integer"
                },
                "company_id": {
                    "type": "integer"
                },
                "dock_high": {
                    "type": "boolean"
                },
                "door_height": {
                    "type": "integer"
                },
                "door_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "door_weight_capacity": {
                    "type": "integer"
                },
                "door_width": {
                    "type": "integer"
                },
                "driver_id": {
                    "type": "integer"
                },
                "expiration": {
                    "type": "integer"
                },
                "lift_gate": {
                    "type": "boolean"
                },
                "load_bars": {
                    "type": "boolean"
                },
                "location": {
                    "description": "create crud for location ---",
                    "type": "string"
                },
                "make": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_name": {
                    "description": "pay to  company -\u003e companyOwner",
                    "type": "string"
                },
                "pallet_jacks": {
                    "type": "boolean"
                },
                "plate": {
                    "type": "string"
                },
                "plated_trailer": {
                    "type": "boolean"
                },
                "purchase_date": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "straps": {
                    "type": "boolean"
                },
                "trailer_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "unit_number": {
                    "type": "string"
                },
                "vin_number": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.Truck": {
            "type": "object",
            "required": [
                "fuel_type",
                "location",
                "location_date",
                "make",
                "plate",
                "state"
            ],
            "properties": {
                "assign_date": {
                    "type": "integer"
                },
                "co_driver_name": {
                    "type": "string"
                },
                "company_id": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "driver_name": {
                    "type": "string"
                },
                "files_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "fuel_card": {
                    "type": "string"
                },
                "fuel_type": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "liability_eff_date": {
                    "type": "integer"
                },
                "liability_exp_date": {
                    "type": "integer"
                },
                "location": {
                    "description": "create crud for location ---",
                    "type": "string"
                },
                "location_date": {
                    "type": "integer"
                },
                "make": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "mpg": {
                    "type": "number"
                },
                "plate": {
                    "type": "integer"
                },
                "plate_expiration": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "trailer_name": {
                    "type": "string"
                },
                "transporter": {
                    "type": "string"
                },
                "unit_number": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vin_number": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.TruckUpdateInput": {
            "type": "object",
            "required": [
                "fuel_type",
                "location",
                "location_date",
                "make",
                "plate",
                "state"
            ],
            "properties": {
                "assign_date": {
                    "type": "integer"
                },
                "co_driver_name": {
                    "type": "string"
                },
                "company_id": {
                    "type": "integer"
                },
                "driver_name": {
                    "type": "string"
                },
                "fuel_card": {
                    "type": "string"
                },
                "fuel_type": {
                    "type": "string"
                },
                "liability_eff_date": {
                    "type": "integer"
                },
                "liability_exp_date": {
                    "type": "integer"
                },
                "location": {
                    "description": "create crud for location ---",
                    "type": "string"
                },
                "location_date": {
                    "type": "integer"
                },
                "make": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "mpg": {
                    "type": "number"
                },
                "plate": {
                    "type": "integer"
                },
                "plate_expiration": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "trailer_name": {
                    "type": "string"
                },
                "transporter": {
                    "type": "string"
                },
                "unit_number": {
                    "type": "string"
                },
                "vin_number": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.UpdateUserInput": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "auth_status": {
                    "type": "boolean"
                },
                "company_id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "ip_address": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_connection": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "auth_status": {
                    "type": "boolean"
                },
                "company_id": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "ip_address": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "last_connection": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "description": "activated - confirm - deleted  -- login only for confirm",
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "errors": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
